[["open-street-map.html", "Chapter 6 Open Street Map 6.1 Parking areas 6.2 Parks 6.3 Forest", " Chapter 6 Open Street Map We get location information from Open Street Map. We select services inside a buffer of approx. 2 km around the study area (Figure ??), assuming that people may use then (e.g. parks, parking areas) outside Copenhagen City but they are close enough to they houses. # Area for OSM data: Copenhagen CPH_osm_bb &lt;- getbb(&quot;Copenhagen&quot;) # Bounding of the study area (approx. buffer of 2km) box &lt;- c(xmin = 714906, xmax = 733618, ymin = 6166579, ymax = 6184092) bbox &lt;- st_bbox(box) bbox_sf &lt;- st_as_sfc(bbox) %&gt;% st_set_crs(&quot;EPSG:25832&quot;) 6.1 Parking areas Parking areas are tagged as key = amenity and value = parking (Figure 6.1). # Get car packs from OSM parking_osm &lt;- CPH_osm_bb %&gt;% opq() %&gt;% add_osm_feature(key = &quot;amenity&quot;, value = c(&quot;parking&quot;)) %&gt;% osmdata_sf() # Clean dataset parking &lt;- parking_osm$osm_polygons %&gt;% # Transform CRS st_transform(crs = &quot;EPSG:25832&quot;) %&gt;% select(osm_id, amenity) %&gt;% # Calculate the area of the polygons mutate(area_m2 = as.numeric(units::set_units(st_area(.), m^2))) %&gt;% # Crop to area of influence st_crop(bbox_sf) # Plot ggplot() + geom_sf(data = st_crop(dk_country, bbox_sf), fill = &quot;grey95&quot;) + geom_sf(data = cph_parish, fill = &quot;grey85&quot;, color = &quot;grey50&quot;, size = 0.05) + geom_sf(data = parking, fill = &quot;#D55E00&quot;, col = NA) + my_theme_map() + labs(caption = &quot;Source: Open Street Map&quot;) Figure 6.1: Parking areas Potential model # Based on: https://riatelab.github.io/potential/articles/potential.html # Points to estimate the potential grids100m_cent &lt;- st_centroid(grids100m) # Calculate centroid of the parking area parking_cent &lt;- st_centroid(parking) # Distance matrix d &lt;- create_matrix(x = parking_cent, y = grids100m_cent) Spatial interaction function (Figure 6.2). span &lt;- 300 beta &lt;- 2 plot_inter(fun = &quot;e&quot;, span = span, beta = beta) Figure 6.2: Spatial interaction function Calculate the potential (Figure 6.3). # Calculate the potential grids100m_cent$pot &lt;- potential(x = parking_cent, y = grids100m_cent, d = d, var = &quot;area_m2&quot;, fun = &quot;e&quot;, span = span, beta = beta) # Potential relatively to its maximum grids100m_cent$pot_perc &lt;- 100 * grids100m_cent$pot / max(grids100m_cent$pot) # Add info to grids100m grids100m_cent &lt;- grids100m_cent %&gt;% as_tibble() %&gt;% select(-geometry, int) parking_pot &lt;- grids100m %&gt;% as_tibble() %&gt;% left_join(grids100m_cent, by = &quot;grid_ID&quot;) %&gt;% st_sf() # Plot ggplot() + geom_sf(data = parking_pot, aes(fill = pot_perc), col = NA) + scale_fill_viridis_c(name = &quot;Perc [%]&quot;, option = &quot;plasma&quot;) + geom_sf(data = cph_parish, fill = NA, color = &quot;grey50&quot;, size = 0.05) + my_theme_map() Figure 6.3: Potential of parking areas 6.2 Parks A park is an area of open space for recreational use, usually designed and in semi-natural state with grassy areas, trees and bushes - OMS (Figure 6.4). # Green areas CPH_parks &lt;- CPH_osm_bb %&gt;% opq() %&gt;% add_osm_feature(key = &quot;leisure&quot;, value = c(&quot;park&quot;, &quot;common&quot;, &quot;garden&quot;, &quot;firepit&quot;, &quot;nature_reserve&quot;)) %&gt;% osmdata_sf() # Clean parks &lt;- select(CPH_parks$osm_polygons, osm_id, name) %&gt;% # Transform CRS st_transform(crs = &quot;EPSG:25832&quot;) %&gt;% # Encoding names (Danish) mutate(name = iconv(name, &quot;UTF-8&quot;)) %&gt;% # Calculate the area of the polygons mutate(area_m2 = as.numeric(units::set_units(st_area(.), m^2))) %&gt;% # Crop to area of influence st_crop(bbox_sf) # Plot ggplot() + geom_sf(data =st_crop(dk_country, bbox_sf), fill = &quot;grey95&quot;) + geom_sf(data = cph_parish, fill = &quot;grey85&quot;, color = &quot;grey50&quot;, size = 0.05) + geom_sf(data = parks, colour = NA, fill = &quot;palegreen3&quot;, alpha = .3) + my_theme_map() Figure 6.4: Green areas Potential model # Points to estimate the potential grids100m_cent &lt;- st_centroid(grids100m) # Calculate centroid of the parking area parks_cent &lt;- st_centroid(parks) # Distance matrix d &lt;- create_matrix(x = parks_cent, y = grids100m_cent) Spatial interaction function (Figure 6.5). span &lt;- 300 beta &lt;- 2 plot_inter(fun = &quot;e&quot;, span = span, beta = beta) Figure 6.5: Spatial interaction function Calculate the potential (Figure 6.6). # Calculate the potential grids100m_cent$pot &lt;- potential(x = parks_cent, y = grids100m_cent, d = d, var = &quot;area_m2&quot;, fun = &quot;e&quot;, span = span, beta = beta) # Potential relatively to its maximum grids100m_cent$pot_perc &lt;- 100 * grids100m_cent$pot / max(grids100m_cent$pot) # Add info to grids100m grids100m_cent &lt;- grids100m_cent %&gt;% as_tibble() %&gt;% select(-geometry, int) parks_pot &lt;- grids100m %&gt;% as_tibble() %&gt;% left_join(grids100m_cent, by = &quot;grid_ID&quot;) %&gt;% st_sf() # Plot ggplot() + geom_sf(data = parks_pot, aes(fill = pot_perc), col = NA) + scale_fill_viridis_c(name = &quot;Perc [%]&quot;, option = &quot;plasma&quot;) + geom_sf(data = cph_parish, fill = NA, color = &quot;grey50&quot;, size = 0.05) + my_theme_map() Figure 6.6: Potential of parking areas 6.3 Forest CPH_forest &lt;- CPH_osm_bb %&gt;% opq() %&gt;% add_osm_feature(key = &quot;landuse&quot;, value = c(&quot;meadow&quot;, &quot;allotments&quot;, &quot;forest&quot;)) %&gt;% osmdata_sf() CPH_scrub &lt;- CPH_osm_bb %&gt;% opq() %&gt;% add_osm_feature(key = &quot;natural&quot;, value = &quot;scrub&quot;) %&gt;% osmdata_sf() # Land_use: recreation_ground "]]
